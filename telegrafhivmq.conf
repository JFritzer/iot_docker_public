[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  username = "bobidb"
  password = "letmein"
  database = "telegrafdb" 

[[outputs.file]]
  files = ["stdout", "/tmp/metrics.out"]

# Nach dem Punkt das Measurement
[[inputs.mqtt_consumer]]
  servers = ["d0b3cc94d52d409a920e09f9cb9f7050.s1.eu.hivemq.cloud:8883"]
  ## MQTT QoS, must be 0, 1, or 2
  qos = 0

  ## Topics to subscribe to
  topics = [
    "temperature",
    "final_weight",
    "dispenser_green",
    "dispenser_blue",
  	"dispenser_red",
    "+/vibration"
  ]

  # if true, messages that can't be delivered while the subscriber is offline
  # will be delivered when it comes back (such as on service restart).
  # NOTE: if true, client_id MUST be set
  persistent_session = false
  # If empty, a random client ID will be generated.
  client_id = ""

  ## username and password to connect MQTT server.
  username = "123456!pass"
  password = "123456!pass"

  ## Optional SSL Config
  # ssl_ca = "/etc/telegraf/ca.pem"
  # ssl_cert = "/etc/telegraf/cert.pem"
  # ssl_key = "/etc/telegraf/key.pem"
  ## Use SSL but skip chain & host verification
  insecure_skip_verify = true

  ## Data format to consume.
  ## Each data format has it's own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "json"
  json_string_fields = ["bottle","dispenser"]
  tags = {tag1 = "Test", tag2 = "Teaching Factory"}
  name_override = "Simulated Teaching Factory"
